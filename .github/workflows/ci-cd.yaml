name: CI-CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test-job:
    name: Build & Test
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
        poetry-version: ['1.1']
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Python v${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Poetry v${{ matrix.poetry-version }}
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        run: poetry install

      - name: Pre-commit
        run: poetry run pre-commit run --all-files

      - name: Build
        run: poetry build

      - name: Test
        run: poetry run pytest

  publish-job:
    name: Publish to PyPi and Git tag
    needs: build-and-test-job
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Python v3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Setup Poetry v1.1.13
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: '1.1.13'

      - name: Install dependencies
        run: poetry install

      - name: Publish to PyPi
        shell: bash
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry publish -vv --build -u '__token__' -p "$PYPI_TOKEN"

      - name: Publish to Git tag
        run: |
            TAG_HASH=$(git show -s --format='%H')
            TAG_VERSION=$(poetry run python ./eng/print_project_version.py ./pyproject.toml)
            git tag "v${TAG_VERSION}" "${TAG_HASH}"
            git push --tags
